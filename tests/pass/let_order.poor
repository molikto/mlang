
define refl(#A: type, #x: A): x ≡ x = i → x

define some_test = run { // these also passes in Agda

  define test : ^type = 
    declare

  define test2 : test ≡ type = 
    declare

  define test = type

  define test2 = ^^refl

  test2
}


define some_test2 = run { // these also passes in Agda
  define test: ^type ⇒ ^type = ─ → type

  define test2: ^type = 
    declare

  // here there is a reeval of meta value, because refl is solved to be left hand side
  define test3: test(test2) ≡ type = ^^refl

  define test2 = type

  test2
}



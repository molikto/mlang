

define refl(#A: type, #x: A): x ≡ x = i → x

define flat: type = sum {
   case true false
}

define flat2: type = sum {
   case true false
}

// non-recursive record and sum has structural equality, their case/field name/order needs to be exactly the same
define flat_is_ok: flat ≡ flat2 = ^refl

define r1: ^type = record {
  field a b: type
}

define r2: ^type = record {
  field a b: type
}

define r_is_ok: r1 ≡ r2 = ^^refl
